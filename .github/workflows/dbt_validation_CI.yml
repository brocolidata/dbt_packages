name: '[CI] Lint dbt models'

on:
  pull_request: 
    types: 
      - opened
      - edited
      - synchronize
      - reopened
    paths:
      - 'src/**/models/**/*.sql'
    

env:
  # These are configured in GitHub secrets
  GCP_REGION: ${{ secrets.GCP_REGION }}
  FRONT_PROJECT_ID: ${{ secrets.FRONT_PROJECT_ID }}
  BACK_PROJECT_ID: ${{ secrets.BACK_PROJECT_ID }}
  DATASET_NAME_ODS: ods

jobs:
  changes:
    name: 'Detect updated dbt models'
    runs-on: ubuntu-latest
    outputs:
      currencies: ${{ steps.filter.outputs.currencies }}
      currencies_files: ${{ steps.filter.outputs.currencies_files }}
      freight: ${{ steps.filter.outputs.freight }}
      freight_files: ${{ steps.filter.outputs.freight_files }}
      fuel: ${{ steps.filter.outputs.fuel }}
      fuel_files: ${{ steps.filter.outputs.fuel_files }}
      adventure_works: ${{ steps.filter.outputs.adventure_works }}
      adventure_works_files: ${{ steps.filter.outputs.adventure_works_files }}
      changed_projects: ${{ steps.filter.outputs.changes }}

    steps:
      - name: 'Checkout branch'
        uses: actions/checkout@v2

      - name: 'Filter updated dbt projects'
        uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: 'shell'
          filters: |
            currencies:
              - added|modified: 'src/currencies/**'
            freight:
              - added|modified: 'src/freight/**'
            fuel:
              - added|modified: 'src/fuel/**'
            adventure_works:
              - added|modified: 'src/adventure_works/**'
              
      - name: 'Debug dorny/paths-filter'
        run: echo ${{ steps.filter.outputs.changes }}

  lint:
    name: 'Lint updated dbt models'
    runs-on: ubuntu-latest
    needs: changes
    environment:
      name: 'Approve Integration Tests'
    env:
      # These are configured in GitHub secrets
      DBT_ROOT_PATH: ${{ github.workspace }}/src
      DBT_PROFILES_DIR: ${{ github.workspace }}/profiles
    if: needs.changes.outputs.changed_projects != '[]'
    strategy:
      matrix:
        changed_project: ${{ fromJSON(needs.changes.outputs.changed_projects) }}
    steps:
    
      - name: 'Checkout branch'
        uses: actions/checkout@v2
        
      - name: 'Write changes outputs to JSON file'
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "outputs.json"
          json: "${{ toJSON(needs.changes.outputs) }}"
          
      - name: 'Debug outputs JSON'
        run: echo $(cat outputs.json)
          
      - name: 'Extract updated dbt models in ${{ matrix.changed_project }}'
        id: read_changed_files
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'outputs.json'
            prop_path: '${{ matrix.changed_project }}_files'
            
      - name: 'Debug changed files parsing'
        run: echo ${{steps.read_changed_files.outputs.prop}}
        
      - name: 'Setup Python 3.9'
        uses: "actions/setup-python@v2"
        with:
          python-version: 3.9

      - name: 'Install Python packages'
        run: python -m pip install dbt-bigquery sqlfluff-templater-dbt

      - id: 'auth'
        name: 'Setup gcloud Authentication'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Test database connection'
        run: dbt debug
        working-directory: ${{ env.DBT_ROOT_PATH }}/${{ matrix.changed_project }}

      - name: 'Install ${{ matrix.changed_project }} dbt packages'
        run: dbt deps
        working-directory: ${{ env.DBT_ROOT_PATH }}/${{ matrix.changed_project }}

      - name: 'Debug Lint ${{ matrix.changed_project }} dbt models'
        if: ${{ matrix.changed_project }} != ''
        working-directory: ${{ github.workspace }}
        shell: bash -l {0}
        run: |
          sqlfluff lint \
          --nofail \
          --config src/${{ matrix.changed_project }}/.sqlfluff \
          ${{steps.read_changed_files.outputs.prop}}
        

      - name: 'Lint ${{ matrix.changed_project }} dbt models'
        id: sqlfluff_json
        if: ${{ matrix.changed_project }} != ''
        working-directory: ${{ github.workspace }}
        shell: bash -l {0}
        run: |
          sqlfluff lint \
            --nofail \
            --config src/${{ matrix.changed_project }}/.sqlfluff \
            --format github-annotation \
            --annotation-level failure \
            ${{steps.read_changed_files.outputs.prop}} > ${{ env.DBT_ROOT_PATH }}/${{ matrix.changed_project }}/annotations.json


      - name: 'Annotate PR with ${{ matrix.changed_project }} linting violations'
        uses: yuzutech/annotations-action@v0.3.0
        if: ${{ matrix.changed_project }} != ''
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          title: "SQLFluff Lint Violations"
          input: "${{ env.DBT_ROOT_PATH }}/${{ matrix.changed_project }}/annotations.json"

